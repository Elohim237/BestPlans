{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserplanService {\n  constructor(http) {\n    this.http = http;\n  }\n  showPlan(plan) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const url = 'http://127.0.0.1:8000/api/choices/';\n    return this.http.post(url, plan, {\n      headers\n    });\n  }\n  setHemle(obj) {\n    this.hemles = obj;\n    console.log(\"hemle set service\", this.hemles);\n    localStorage.removeItem('hemle');\n    localStorage.setItem('hemle', JSON.stringify(this.hemles));\n    return this.hemles;\n  }\n  SetMango(obj) {\n    this.mangos = obj;\n    console.log(\"mango set service\", this.mangos);\n    return this.mangos;\n  }\n  getHemle() {\n    //@ts-ignore\n    this.hemles = JSON.parse(localStorage.getItem('hemle'));\n    console.log(\"hemle get service\", this.hemles);\n    return this.hemles;\n  }\n  getMango() {\n    return this.mangos;\n  }\n}\nUserplanService.ɵfac = function UserplanService_Factory(t) {\n  return new (t || UserplanService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserplanService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserplanService,\n  factory: UserplanService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAiC,sBAAsB;;;AAetF,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAGhCC,QAAQ,CAACC,IAAQ;IAEtB,MAAMC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,MAAMO,GAAG,GAAC,oCAAoC;IAC9C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAA2BD,GAAG,EAACF,IAAI,EAAC;MAACC;IAAO,CAAC,CAAC;EACrE;EACOG,QAAQ,CAACC,GAA4B;IAC1C,IAAI,CAACC,MAAM,GAACD,GAAG;IACfE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAC,IAAI,CAACF,MAAM,CAAC;IAC5CG,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,MAAM,CAAC,CAAC;IAC1D,OAAO,IAAI,CAACA,MAAM;EACpB;EACOQ,QAAQ,CAACT,GAA4B;IAC1C,IAAI,CAACU,MAAM,GAACV,GAAG;IACfE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAC,IAAI,CAACO,MAAM,CAAC;IAC5C,OAAO,IAAI,CAACA,MAAM;EACpB;EACOC,QAAQ;IACb;IACA,IAAI,CAACV,MAAM,GAAGM,IAAI,CAACK,KAAK,CAACR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC,CAAC;IACvDX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAC,IAAI,CAACF,MAAM,CAAC;IAC5C,OAAO,IAAI,CAACA,MAAM;EACpB;EACOa,QAAQ;IACb,OAAO,IAAI,CAACJ,MAAM;EACpB;;AA9BWnB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAwB,SAAfxB,eAAe;EAAAyB,YAFd;AAAM","names":["HttpHeaders","UserplanService","constructor","http","showPlan","plan","headers","url","post","setHemle","obj","hemles","console","log","localStorage","removeItem","setItem","JSON","stringify","SetMango","mangos","getHemle","parse","getItem","getMango","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Documents\\GitHub\\BestPlans\\src\\app\\services\\userplan.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams, HttpResponse} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\nexport interface BundleItems {\n  amount: number;\n  sms: number;\n  call: number;\n  validity: number;\n  data: number;\n  priorities: Map<string, number>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserplanService {\n  constructor(private http: HttpClient) {}\n  hemles!:Map<string, BundleItems>;\n  mangos!: Map<string, BundleItems>;\n  public showPlan(plan:any): Observable<any>\n  {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url='http://127.0.0.1:8000/api/choices/';\n    return this.http.post<Map<string, BundleItems>>(url,plan,{headers});\n  }\n  public setHemle(obj:Map<string, BundleItems>){\n    this.hemles=obj;\n    console.log(\"hemle set service\",this.hemles);\n    localStorage.removeItem('hemle');\n    localStorage.setItem('hemle', JSON.stringify(this.hemles))\n    return this.hemles;\n  }\n  public SetMango(obj:Map<string, BundleItems>){\n    this.mangos=obj;\n    console.log(\"mango set service\",this.mangos);\n    return this.mangos;\n  }\n  public getHemle(): Map<Bundle>{\n    //@ts-ignore\n    this.hemles = JSON.parse(localStorage.getItem('hemle'))\n    console.log(\"hemle get service\",this.hemles);\n    return this.hemles;\n  }\n  public getMango(): Map<string, BundleItems>{\n    return this.mangos;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}